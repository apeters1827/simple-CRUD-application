- const getInputName = (formObj, property) => `${formObj.name}[${property}]`

mixin formFor(options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  form.form(action=url method=isStandart ? method : 'post')
    if !isStandart
      input(name='_method' type='hidden' value=method)
    block

mixin input(property, labelText, options = {})
  - const valueText = _.get(formObj.object, property, '');
  - options.type = _.get(options, 'type', 'text');
  - const labelId = `input for ${property}`;
  - const isInvalid = formObj.errors[property] ? 'is-invalid' : '';
  .form-label-group
    input.form-control(
      class=isInvalid
      id=labelId
      value=(property !== 'password' ? valueText : '')
      name=getInputName(formObj, property)
      placeholder=property
      type=options.type 
      autofocus=options.autofocus
      required=options.required
    )
    label(for=labelId)= labelText
    if formObj.errors[property]
      .invalid-feedback= formObj.errors[property].map(({ message }) => message).join('. ')